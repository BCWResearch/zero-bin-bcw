FROM rustlang/rust:nightly-bullseye-slim@sha256:2be4bacfc86e0ec62dfa287949ceb47f9b6d9055536769bdee87b7c1788077a9 as builder

# Install jemalloc
RUN apt-get update && apt-get install -y libjemalloc2 libjemalloc-dev make clang-16 libssl-dev pkg-config build-essential

# Install llvm-tools-preview (requirement for cargo-pgo to compile an optimized binary)
RUN rustup component add llvm-tools-preview

# Install cargo-pgo, used for building an optimized binary from the gathered profiling data
RUN cargo install cargo-pgo

RUN \
    mkdir -p common/src  && touch common/src/lib.rs && \
    mkdir -p ops/src     && touch ops/src/lib.rs && \
    mkdir -p worker/src  && echo "fn main() {println!(\"YO!\");}" > worker/src/main.rs

COPY Cargo.toml .
RUN sed -i "2s/.*/members = [\"common\", \"ops\", \"worker\"]/" Cargo.toml
COPY Cargo.lock .

COPY .cargo/config.toml ./.cargo/config.toml
COPY common/Cargo.toml ./common/Cargo.toml
COPY ops/Cargo.toml ./ops/Cargo.toml
COPY worker/Cargo.toml ./worker/Cargo.toml

COPY ./rust-toolchain.toml ./

# TODO: this command that will look for the profiling data (a .profraw file generated by `pgo-worker.Dockerfile`) here:
#   `./target/pgo-profiles/*.profraw`
COPY ./target/pgo-profiles/*.profraw ./target/pgo-profiles/

RUN cargo pgo optimize build -- --bin worker

RUN ls -lha ./target/*

COPY common ./common
COPY ops ./ops
COPY worker ./worker
RUN \
    touch common/src/lib.rs && \
    touch ops/src/lib.rs && \
    touch worker/src/main.rs

RUN cargo pgo optimize build -- --bin worker

FROM debian:bullseye-slim
RUN apt-get update && apt-get install -y ca-certificates libjemalloc2 make libssl-dev
COPY --from=builder ./target/x86_64-unknown-linux-gnu/release/worker /usr/local/bin/worker
CMD ["worker"]
